// <auto-generated />
using System;
using Employee.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employee.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240814032345_CreatedModels")]
    partial class CreatedModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Employee.Models.EmployeeModel", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId");

                    b.ToTable("EmployeeTable");
                });

            modelBuilder.Entity("Employee.Models.JobDescriptionModel", b =>
                {
                    b.Property<int>("JobDescriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobDescriptionId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("JobDescriptionId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("jobDescriptionTable");
                });

            modelBuilder.Entity("Employee.Models.JobTitleModel", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitleId"));

                    b.Property<int>("JobDescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("JobTitleId");

                    b.HasIndex("JobDescriptionId");

                    b.ToTable("jobTitleTable");
                });

            modelBuilder.Entity("Employee.Models.JobDescriptionModel", b =>
                {
                    b.HasOne("Employee.Models.EmployeeModel", "Employee")
                        .WithMany("JobDescriptions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Employee.Models.JobTitleModel", b =>
                {
                    b.HasOne("Employee.Models.JobDescriptionModel", "JobDescription")
                        .WithMany("JobTitles")
                        .HasForeignKey("JobDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobDescription");
                });

            modelBuilder.Entity("Employee.Models.EmployeeModel", b =>
                {
                    b.Navigation("JobDescriptions");
                });

            modelBuilder.Entity("Employee.Models.JobDescriptionModel", b =>
                {
                    b.Navigation("JobTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
